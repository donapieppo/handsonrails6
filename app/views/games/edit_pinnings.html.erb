<% width  = @game.image.metadata[:width] %>  
<% height = @game.image.metadata[:height] %>  

<div style="position: fixed !important; top: 10px; left: 0; z-index: 1000; background-color: #eee">
  <button id="start_hold_btn"         class="pinning-action-button pinning-selected-button">Start</button> 
  <button id="hold_btn"               class="pinning-action-button">Presa</button> 
  <button id="top_hold_btn"           class="pinning-action-button">Top</button> 
  <button id="increase_hold_size_btn" class="pinning-action-button mt-2"><i class="fas fa-plus"></i></button> 
  <button id="decrease_hold_size_btn" class="pinning-action-button"><i class="fas fa-minus"></i></button> 
  <button id="undo_btn"               class="pinning-action-button"><i class="fas fa-undo"></i></button>
  <button id="save"                   class="pinning-action-button mt-2">Salva</button>
</div>
<div id="canvasDiv" style="margin: 60px auto; width: <%= width %>px; height: <%= height %>px; background-image: url('<%= url_for(@game.image) %>')"></div>

<script>
   const holds_pinner = new HoldsPinner({target: 'canvasDiv', width: <%= width %>, height: <%= height %>, editable: true, numerable: <%= @game.free_feet.to_s %>});
   const startingHolds = <%= raw (@game.pinnings ? @game.pinnings.to_json : []) %>;
   console.log('startingHolds')
   console.log(startingHolds)

   holds_pinner.setup(startingHolds);

   document.querySelector('#start_hold_btn').addEventListener('click', start_hold_selected)
   document.querySelector('#hold_btn').addEventListener('click', simple_hold_selected)
   document.querySelector('#top_hold_btn').addEventListener('click', top_hold_selected)
   document.querySelector('#increase_hold_size_btn').addEventListener('click', increase_hold_size)
   document.querySelector('#decrease_hold_size_btn').addEventListener('click', decrease_hold_size)
   document.querySelector('#undo_btn').addEventListener('click', undo)
   document.querySelector('#save').addEventListener('click', save_holds)

   function clear_selected() {
     document.querySelector('#start_hold_btn').classList.remove("pinning-selected-button");
     document.querySelector('#hold_btn').classList.remove("pinning-selected-button");
     document.querySelector('#top_hold_btn').classList.remove("pinning-selected-button");
   }

   function start_hold_selected() {
     clear_selected()
     document.querySelector('#start_hold_btn').classList.add("pinning-selected-button");
     holds_pinner.change_hold_type('start')
   }

   function simple_hold_selected() {
     clear_selected()
     document.querySelector('#hold_btn').classList.add("pinning-selected-button");
     holds_pinner.change_hold_type('hold')
   }

   function top_hold_selected() {
     clear_selected()
     document.querySelector('#top_hold_btn').classList.add("pinning-selected-button");
     holds_pinner.change_hold_type('top')
   }

    function increase_hold_size() {
      holds_pinner.increase_size();
    }

    function decrease_hold_size() {
      holds_pinner.decrease_size();
    }

    function undo() {
      holds_pinner.undo();
    }

   function save_holds() {
     var result = {};
     result['holds'] = holds_pinner.get_holds();
     result['image'] = holds_pinner.export_image();
     console.log(JSON.stringify(result));
     let myRequest = new Request('<%= pinnings_game_path(@game) %>', 
       { 
         method: 'POST', 
         headers: { "Content-Type": "application/json" },
         body: JSON.stringify(result)
       }
     );
     fetch(myRequest).then(function(response) {
       console.log(response);
       if (response.statusText === 'OK') {
         window.location.href = "<%= game_path(@game) %>";
       };
     });
   }
</script>

